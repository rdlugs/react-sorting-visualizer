{"version":3,"sources":["components/Includes/Header.js","actions/index.js","reducers/Array/index.js","reducers/Algorithm/index.js","reducers/AnimationSpeed/index.js","reducers/ArrayBars/index.js","reducers/Running/index.js","reducers/Swappers/index.js","reducers/Swappers/selectionSearch.js","reducers/Swappers/selectionCurrent.js","reducers/Swappers/selectionTag.js","reducers/Sorted/index.js","reducers/Timeeouts/index.js","reducers/index.js","Store.js","components/SortingAlgorithms/_handleDispatch.js","components/SortingAlgorithms/InsertionSort.js","components/SortingAlgorithms/SelectionSort.js","components/SortingAlgorithms/BubbleSort.js","components/SortingAlgorithms/MergeSort.js","components/SortingAlgorithms/QuickSort.js","components/Includes/BarOptions.js","components/Includes/Bars.js","components/SortVisualizer/SortVisualizer.js","components/Main.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","sticky","id","Container","fluid","Brand","href","Image","src","process","alt","width","roundedCircle","style","marginRight","Collapse","className","Text","rel","target","React","Component","setRunning","isRunning","type","payload","setSwappers","swappers","setSorted","isSorted","ArrayReducer","state","action","AlgorithmReucer","AnimationSpeedReducer","ArrayBarsReducer","RunningReducer","defaultState","swappersReducer","selectionSearchReducer","selectionCurrentReducer","selectionTagReducer","sortedReducer","timeoutsReducer","length","i","clearTimeout","allReducers","combineReducers","arrayBars","algorithm","AlgorithmReducer","animationSpeed","array","sorted","selectionSearchIndex","selectionCurrentIndex","selectionTagIndex","timeouts","createStore","Timeouts","handleDispatch","toDispatch","speed","timeOut","store","dispatch","Array","isArray","push","setTimeout","barOneIndex","barTwoIndex","InsertionSort","auxArray","arrLength","current_val","prev_index","current_index","doInsertionSort","slice","SelectionSort","curr_val","smallest_val","smallest_index","x","doSelectionSort","BubbleSort","array_length","swap","y","doBubbleSort","MergeSort","auxArr","doMergeSort","mainArray","startidx","endidx","mididx","Math","floor","idx1","idx2","idx3","doMerge","QuickSort","doQuickSort","low","high","partition","start","end","pivot","j","lowVal","k","quickSortHelper","MAX_ARRAY_SIZE","ALGORITHM_TYPES","value","label","DEFAULT_ALGORITHM_TYPE","ANIMATION_SPEED","DEFAULT_ANIMATION_SPEED","BarOptions","props","setArray","bind","sort","setAlgorithmType","setAnimationSpeed","stopSort","this","setArrayBars","setAlgorithm","bars","Number","randomIntFromInterval","min","max","random","clearTimeouts","Col","Form","Row","md","lg","sm","Group","Label","onChange","options","isDisabled","placeholder","menuPlacement","defaultValue","tooltipPlacement","tooltipLabel","currentValue","size","e","onAfterChange","disabled","Button","onClick","connect","Bars","isSwap","map","val","key","window","innerWidth","classSwap","searching","tagged","current","height","SortVisualizer","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.add320d6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Container, Image } from 'react-bootstrap'\r\n\r\nexport default class Header extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" id=\"header\">\r\n            <Container fluid>\r\n                <Navbar.Brand href=\"/\">\r\n                    <Image \r\n                        src={process.env.PUBLIC_URL +'/logo.png'} \r\n                        alt=\"asd\" \r\n                        width=\"30\" \r\n                        roundedCircle\r\n                        style={{ marginRight:\"10px\" }}/>\r\n                    Sorting Visualizer\r\n                </Navbar.Brand>\r\n                \r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        <a \r\n                            href=\"https://github.com/rdlugs/react-sorting-visualizer\" \r\n                            rel=\"noopener noreferrer\" \r\n                            target=\"_blank\"\r\n                            className=\"githubLink\">github.com/rdlugs</a>\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n","const setAnimationSpeed = (speed) => {\r\n    return {\r\n        type : \"SET_ANIMATION_SPEED\",\r\n        payload: speed\r\n    }\r\n}\r\n\r\nconst setAlgorithmType = (algorithm) => {\r\n    return {\r\n        type: \"SET_ALGORITHM\",\r\n        payload: algorithm\r\n    }\r\n}\r\n\r\nconst setArrayBars = (bars) => {\r\n    return{\r\n        type: \"SET_ARRAY_BARS\",\r\n        payload: bars\r\n    }\r\n}\r\n\r\nconst setArray = (array) => {\r\n    return {\r\n        type: \"SET_ARRAY\",\r\n        payload: array,\r\n    }\r\n}\r\n\r\n\r\nconst setRunning = (isRunning) => {\r\n    return {\r\n        type: \"SET_RUNNING\",\r\n        payload: isRunning\r\n    }\r\n}\r\n\r\nconst setSwappers = (swappers) => {\r\n    return {\r\n        type: \"SET_SWAPPERS\",\r\n        payload: swappers\r\n    }\r\n}\r\n\r\nconst clearSwappers = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSorted = (isSorted) => {\r\n    return {\r\n        type: \"SET_SORTED\",\r\n        payload: isSorted\r\n    }\r\n}\r\n\r\nconst setSelectionSearchIndex = (searchIndex) => {\r\n    return {\r\n        type: \"SET_SEARCH\",\r\n        payload: searchIndex\r\n    }\r\n}\r\nconst clearSelectionSearchIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSelectionCurrentIndex = (currentIndex) => {\r\n    return {\r\n        type: \"SET_CURRENT\",\r\n        payload: currentIndex\r\n    }\r\n}\r\nconst clearSelectionCurrentIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSelectionTagIndex = (tagIndex) => {\r\n    return {\r\n        type: \"SET_TAG\",\r\n        payload: tagIndex\r\n    }\r\n}\r\nconst clearSelectionTagIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst addTimeout = (timeout) => {\r\n    return {\r\n        type: \"ADD_TIMEOUT\",\r\n        payload: timeout\r\n    }\r\n}\r\nconst clearTimeout = () =>{\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nexport { \r\n    setAnimationSpeed, \r\n    setAlgorithmType,\r\n    setArrayBars,\r\n    setArray,\r\n    setRunning,\r\n    setSwappers,\r\n    clearSwappers,\r\n    setSorted,\r\n    setSelectionSearchIndex,\r\n    setSelectionCurrentIndex,\r\n    setSelectionTagIndex,\r\n    clearSelectionSearchIndex,\r\n    clearSelectionCurrentIndex,\r\n    clearSelectionTagIndex,\r\n    addTimeout,\r\n    clearTimeout\r\n}","\r\nconst ArrayReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"SET_ARRAY\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ArrayReducer","const defaultState = \"\"\r\n\r\nconst AlgorithmReucer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ALGORITHM\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AlgorithmReucer","const defaultState = 0\r\n\r\nconst AnimationSpeedReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ANIMATION_SPEED\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AnimationSpeedReducer","const defaultState = 50\r\n\r\nconst ArrayBarsReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ARRAY_BARS\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ArrayBarsReducer","const defaultState = false\r\n\r\nconst RunningReducer = (state = defaultState, action) => {\r\n    if(action.type === \"SET_RUNNING\")\r\n        state = action.payload\r\n    \r\n    return state\r\n}\r\n\r\nexport default RunningReducer","const defaultState = []\r\n\r\nconst swappersReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_SWAPPERS\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = []\r\n            break\r\n        default:\r\n            state = []\r\n    }\r\n    return state\r\n}\r\n\r\nexport default swappersReducer","const defaultState = null\r\n\r\nconst selectionSearchReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_SEARCH\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionSearchReducer","const defaultState = null\r\n\r\nconst selectionCurrentReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_CURRENT\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionCurrentReducer","const defaultState = null\r\n\r\nconst selectionTagReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_TAG\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionTagReducer","const defaultState = false\r\n\r\nconst sortedReducer = (state = defaultState, action) => {\r\n    if(action.type === \"SET_SORTED\") {\r\n        state = action.payload\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default sortedReducer","const defaultState = []\r\n\r\nconst timeoutsReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"ADD_TIMEOUT\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            if(state.length > 0) {\r\n                for(let i=0; i < state.length; i++)\r\n                {\r\n                    clearTimeout(state[i])\r\n                }\r\n            }\r\n            state = []\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default timeoutsReducer","import { combineReducers } from 'redux'\r\n\r\n/**\r\n * Reducers\r\n * \r\n */\r\nimport ArrayReducer from './Array'\r\nimport AlgorithmReducer from './Algorithm'\r\nimport AnimationSpeedReducer from  './AnimationSpeed'\r\nimport ArrayBarsReducer from './ArrayBars'\r\nimport RunningReducer from './Running'\r\nimport swappersReducer from './Swappers'\r\nimport selectionSearchReducer from './Swappers/selectionSearch'\r\nimport selectionCurrentReducer from './Swappers/selectionCurrent'\r\nimport selectionTagReducer from './Swappers/selectionTag'\r\nimport sortedReducer from './Sorted'\r\nimport timeoutsReducer from './Timeeouts'\r\n\r\nconst allReducers = combineReducers({\r\n    arrayBars       : ArrayBarsReducer,\r\n    algorithm       : AlgorithmReducer,\r\n    animationSpeed  : AnimationSpeedReducer,\r\n    array           : ArrayReducer,\r\n    isRunning       : RunningReducer,\r\n    swappers        : swappersReducer,\r\n    sorted          : sortedReducer,\r\n    selectionSearchIndex     : selectionSearchReducer,\r\n    selectionCurrentIndex    : selectionCurrentReducer,\r\n    selectionTagIndex        : selectionTagReducer,\r\n    timeouts                 : timeoutsReducer\r\n})\r\n\r\nexport default allReducers","import { createStore } from \"redux\"\r\nimport allReducers from \"./reducers\"\r\n\r\nexport default createStore(\r\n    allReducers)","import store from '../../Store'\r\n\r\n/**\r\n * Action States\r\n * \r\n */\r\nimport { \r\n    setSwappers, \r\n    setRunning, \r\n    setSorted, \r\n    addTimeout, \r\n    clearTimeout,\r\n    setSelectionSearchIndex,\r\n    setSelectionCurrentIndex,\r\n    setSelectionTagIndex,\r\n    clearSelectionCurrentIndex,\r\n    clearSelectionSearchIndex,\r\n    clearSelectionTagIndex,\r\n} from '../../actions'\r\n\r\n/**\r\n * \r\n * Timouts Temp\r\n * \r\n */\r\n let Timeouts = []\r\n\r\nfunction handleDispatch(toDispatch, array, animationSpeed, algorithm) {\r\n    const speed = 100 / animationSpeed\r\n    let timeOut = 0\r\n\r\n    store.dispatch(setRunning(true))\r\n    store.dispatch(setSorted(false))\r\n\r\n    for(let i=0; i < toDispatch.length; i++) {\r\n        timeOut = i * speed\r\n\r\n        // Swapping Values\r\n        if(Array.isArray(toDispatch[i][0])) \r\n        {\r\n            Timeouts.push(setTimeout(()=>{\r\n                if(algorithm === \"mergeSort\")\r\n                {\r\n                    const barOneIndex = toDispatch[i][0][0]\r\n                    store.dispatch(setSwappers(toDispatch[i]))\r\n                    array[barOneIndex] = toDispatch[i][0][1]\r\n                }\r\n                else\r\n                {\r\n                    const barOneIndex = toDispatch[i][0][0]\r\n                    const barTwoIndex = toDispatch[i][1][0]\r\n                    \r\n                    store.dispatch(setSwappers(toDispatch[i]))\r\n                    \r\n                    array[barOneIndex] = toDispatch[i][0][1]\r\n                    array[barTwoIndex] = toDispatch[i][1][1]\r\n                }\r\n\r\n            }, i * speed))\r\n        }\r\n        else //comparing\r\n        {\r\n            switch(algorithm)\r\n            {\r\n                case \"insertionSort\":\r\n                case \"bubbleSort\":\r\n                case \"mergeSort\":\r\n                case \"quickSort\":\r\n                    Timeouts.push(setTimeout(()=>{\r\n                        store.dispatch(setSwappers(toDispatch[i]))\r\n                    }, i * speed))\r\n                    break\r\n\r\n                case \"selectionSort\":\r\n                    Timeouts.push(setTimeout(()=>{\r\n                        switch(toDispatch[i][0]){\r\n                            case \"current\":\r\n                                store.dispatch(setSelectionCurrentIndex(toDispatch[i][1]))\r\n                                break;\r\n                            case \"search\":\r\n                                store.dispatch(setSelectionSearchIndex(toDispatch[i][1]))\r\n                                break;\r\n                            case \"tag\":\r\n                                store.dispatch(setSelectionTagIndex(toDispatch[i][1]))\r\n                                break;\r\n                            default:\r\n                                return true\r\n                        }\r\n                    }, i * speed))\r\n                    break\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    // Is Animation is done\r\n    Timeouts.push(setTimeout(()=>{\r\n        store.dispatch(setRunning(false))\r\n        store.dispatch(setSorted(true))\r\n        store.dispatch(clearTimeout())\r\n        \r\n        if( algorithm === \"selectionSort\" ) \r\n        {\r\n            store.dispatch(clearSelectionCurrentIndex())\r\n            store.dispatch(clearSelectionSearchIndex())\r\n            store.dispatch(clearSelectionTagIndex())\r\n        }\r\n\r\n    }, timeOut))\r\n\r\n    // add Timeouts to store\r\n    store.dispatch(addTimeout(Timeouts))\r\n}\r\n\r\nexport default handleDispatch","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function InsertionSort(array, animationSpeed, algorithm) {\r\n    \r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n\r\n    doInsertionSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doInsertionSort(auxArray, toDispatch) {\r\n    let arrLength = auxArray.length\r\n    \r\n    for(let i=1; i < arrLength; i++) \r\n    {\r\n        var current_val = auxArray[i]\r\n        var prev_index = i - 1\r\n        var current_index = i\r\n        \r\n        toDispatch.push([prev_index, current_index])\r\n        while( auxArray[prev_index] > current_val) {\r\n            auxArray[prev_index + 1] = auxArray[prev_index];\r\n            \r\n            toDispatch.push([ [prev_index, current_val], [current_index, auxArray[prev_index]] ])\r\n            \r\n            prev_index--      \r\n            current_index--\r\n        }\r\n\r\n        auxArray[prev_index+1] = current_val\r\n    }\r\n}","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function SelectionSort(array, animationSpeed, algorithm) {\r\n\r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n    doSelectionSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doSelectionSort(auxArray, toDispatch)\r\n{\r\n    let arrLength = auxArray.length\r\n\r\n    for(let i=0; i < arrLength; i++) \r\n    {\r\n        var curr_val = auxArray[i]\r\n        var smallest_val = auxArray[i]\r\n        var smallest_index = null\r\n\r\n        toDispatch.push([\"current\", i])\r\n\r\n        for(let x=i+1; x < arrLength; x++)\r\n        {\r\n            toDispatch.push([\"search\", x])\r\n            if(auxArray[x] <= curr_val) \r\n            {\r\n                if(auxArray[x] < smallest_val) {\r\n                    toDispatch.push([\"tag\", x])\r\n                    smallest_val = auxArray[x]\r\n                    smallest_index = x\r\n                }\r\n            }\r\n        }\r\n\r\n        if(smallest_index)\r\n        {\r\n            toDispatch.push([ [i,auxArray[smallest_index]], [smallest_index, curr_val ] ])\r\n            auxArray[i] = auxArray[smallest_index]\r\n            auxArray[smallest_index] = curr_val \r\n        }\r\n    }\r\n}\r\n","\r\nimport handleDispatch from \"./_handleDispatch\"\r\n\r\nexport default function BubbleSort(array, animationSpeed, algorithm) {\r\n    \r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n    \r\n    doBubbleSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doBubbleSort(auxArray, toDispatch)\r\n{\r\n    let array_length = auxArray.length\r\n    for(let x=0; x < array_length; x++)\r\n    {\r\n        let swap = false\r\n        for(let y=0; y < array_length - x - 1; y++)\r\n        {\r\n            if(y+1 <= array_length - 1)\r\n            {\r\n                const current_val = auxArray[y]\r\n                toDispatch.push([y, y+1])\r\n\r\n                if(current_val > auxArray[y+1])\r\n                {\r\n                    toDispatch.push([ [y, auxArray[y+1]], [y+1, current_val] ])\r\n                    auxArray[y] = auxArray[y+1]\r\n                    auxArray[y+1] = current_val\r\n                    swap = true\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!swap)\r\n            break\r\n    }\r\n}\r\n","import handleDispatch from \"./_handleDispatch\"\r\n\r\nexport default function MergeSort(array, animationSpeed, algorithm) {\r\n    const toDispatch = [];\r\n    \r\n    if (array.length <= 1) return array;\r\n\r\n    const auxArr = array.slice()\r\n    \r\n    doMergeSort(array.slice(), auxArr, 0, array.length - 1, toDispatch);\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doMergeSort(mainArray, auxArr, startidx, endidx, toDispatch) {\r\n    \r\n    if(startidx === endidx) return\r\n    let mididx = Math.floor((startidx + endidx) / 2)\r\n\r\n    doMergeSort(auxArr, mainArray, startidx, mididx, toDispatch)\r\n    doMergeSort(auxArr, mainArray, mididx + 1, endidx, toDispatch)\r\n\r\n    doMerge(mainArray, auxArr, startidx, mididx, endidx, toDispatch)\r\n}\r\n\r\nfunction doMerge(mainArray, auxArr, startidx, mididx, endidx, toDispatch){\r\n    let idx1 = startidx\r\n    let idx2 = startidx\r\n    let idx3 = mididx + 1\r\n\r\n    while(idx2 <= mididx && idx3 <= endidx)\r\n    {\r\n        toDispatch.push([idx2, idx3]);\r\n        if(auxArr[idx2] <= auxArr[idx3])\r\n        {\r\n            toDispatch.push([[idx1, auxArr[idx2]]]);\r\n            mainArray[idx1++] = auxArr[idx2++]\r\n        }\r\n        else\r\n        {\r\n            toDispatch.push([[idx1, auxArr[idx3]]]);\r\n            mainArray[idx1++] = auxArr[idx3++]\r\n        }\r\n    }\r\n\r\n    while (idx2 <= mididx) {\r\n        toDispatch.push([idx2, mididx]);\r\n        toDispatch.push([[idx1, auxArr[idx2]]]);\r\n        mainArray[idx1++] = auxArr[idx2++];\r\n    }\r\n    \r\n    while (idx3 <= endidx) {\r\n        toDispatch.push([idx3, endidx]);\r\n        toDispatch.push([[idx1, auxArr[idx3]]]);\r\n        mainArray[idx1++] = auxArr[idx3++];\r\n    }\r\n}","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function QuickSort(array, animationSpeed, algorithm) {\r\n    const auxArr = array.slice()\r\n    const toDispatch = []\r\n    \r\n    doQuickSort(auxArr, 0, array.length - 1, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doQuickSort(array, low, high, toDispatch){\r\n   if(low < high){\r\n        const partition = quickSortHelper(array, low, high, toDispatch)\r\n        doQuickSort(array, low, partition - 1, toDispatch)\r\n        doQuickSort(array, partition + 1, high, toDispatch)\r\n   }    \r\n}\r\n\r\nfunction quickSortHelper(array, start, end, toDispatch){\r\n    let pivot = array[end]\r\n    let i = start - 1\r\n\r\n    for(let j = start; j <= end -1; j++){\r\n        toDispatch.push([ j, end ])\r\n        if(array[j] < pivot){\r\n            i++\r\n            let lowVal = array[i]\r\n            toDispatch.push([ [i, array[j]], [j, lowVal] ])\r\n            array[i] = array[j]\r\n            array[j] = lowVal\r\n        }\r\n    }\r\n\r\n    let k = array[i + 1]\r\n    toDispatch.push([ [i+1, array[end] ], [end, k] ])\r\n    array[i+1] = array[end]\r\n    array[end] = k\r\n    \r\n    return i+1\r\n}","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport {  Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport RangeSlider from 'react-bootstrap-range-slider'\r\n\r\n/**\r\n * Redux Actions\r\n * \r\n */\r\nimport { \r\n    setAnimationSpeed, \r\n    setAlgorithmType, \r\n    setArrayBars, \r\n    setArray, \r\n    setRunning, \r\n    setSorted,\r\n    clearTimeout\r\n} from '../../actions'\r\n\r\n\r\n/**\r\n * Import Algorithms\r\n * \r\n */\r\nimport InsertionSort from '../SortingAlgorithms/InsertionSort'\r\nimport SelectionSort from '../SortingAlgorithms/SelectionSort'\r\nimport BubbleSort from '../SortingAlgorithms/BubbleSort'\r\nimport MergeSort from '../SortingAlgorithms/MergeSort'\r\nimport QuickSort from '../SortingAlgorithms/QuickSort'\r\n\r\n\r\n/**\r\n * Array size options\r\n * Change this value to set default array bars\r\n * \r\n */\r\nconst MAX_ARRAY_SIZE = 200\r\nconst MIN_ARRAY_SIZE = 10\r\nconst DEFAULT_ARRAY_SIZE = 100 // default set array size must be less than max array size\r\n\r\n\r\n/**\r\n * List of Algorithm Types\r\n * \r\n */\r\nconst ALGORITHM_TYPES = [\r\n    { value:\"quickSort\",        label:\"Quick Sort\" },\r\n    { value:\"mergeSort\",        label:\"Merge Sort\" },\r\n    { value:\"insertionSort\",    label:\"Insertion Sort\" },\r\n    { value:\"selectionSort\",    label:\"Selection Sort\" },\r\n    { value:\"bubbleSort\",       label:\"Bubble Sort\" },\r\n]\r\n\r\nconst DEFAULT_ALGORITHM_TYPE = ALGORITHM_TYPES[0] // index of algorithm types\r\n\r\n\r\n/**\r\n * List of Animation Speed\r\n * \r\n */\r\nconst ANIMATION_SPEED = [\r\n    { value:0.5,    label:\"0.5x\" },\r\n    { value:0.75,   label: \"0.75x\" },\r\n    { value:1,      label: \"1x\" },\r\n    { value:2,      label: \"2x\" },\r\n    { value:4,      label: \"4x\" },\r\n]\r\n\r\nconst DEFAULT_ANIMATION_SPEED = ANIMATION_SPEED[4]\r\n\r\nclass BarOptions extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.setArray           = this.setArray.bind(this)\r\n        this.sort               = this.sort.bind(this)\r\n        this.setAlgorithmType   = this.setAlgorithmType.bind(this)\r\n        this.setAnimationSpeed  = this.setAnimationSpeed.bind(this)\r\n        this.stopSort           = this.stopSort.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setAlgorithmType()\r\n        this.setAnimationSpeed()\r\n        this.setArrayBars()\r\n    }\r\n\r\n    setAlgorithmType(algorithm = DEFAULT_ALGORITHM_TYPE) {\r\n        this.props.setAlgorithm(algorithm)\r\n\r\n        if(this.props.sorted)\r\n            this.setArray()\r\n        \r\n    }\r\n\r\n    setAnimationSpeed(speed = DEFAULT_ANIMATION_SPEED) {\r\n        this.props.setAnimationSpeed(speed)\r\n\r\n        if(this.props.sorted)\r\n            this.setArray()\r\n    }\r\n\r\n    setArrayBars(bars = DEFAULT_ARRAY_SIZE) {\r\n        bars = (bars > MAX_ARRAY_SIZE) ? MAX_ARRAY_SIZE / 2 : bars\r\n        this.props.setArrayBars(Number(bars))\r\n        this.setArray(Number(bars))\r\n    }\r\n\r\n    setArray(bars) {\r\n        const array = []\r\n        const arrayBars = Number(bars) ? Number(bars) : Number(this.props.arrayBars)\r\n        \r\n        for (let i = 0; i < arrayBars; i++) \r\n            array.push(this.randomIntFromInterval(5, 100));\r\n    \r\n        this.props.setArray(array)\r\n        this.props.setSorted(false)\r\n        this.props.setRunning(false)\r\n    }\r\n\r\n    sort() {\r\n        const { array, animationSpeed, algorithm, sorted } = this.props\r\n\r\n        if(!sorted){\r\n            const doSort = algorithm.value === 'insertionSort' ? InsertionSort :\r\n                algorithm.value === 'selectionSort' ? SelectionSort :\r\n                algorithm.value === 'bubbleSort' ? BubbleSort :\r\n                algorithm.value === 'mergeSort' ? MergeSort : \r\n                algorithm.value === 'quickSort' ? QuickSort : null\r\n\r\n            doSort(array, animationSpeed.value, algorithm.value)\r\n        }\r\n    }\r\n\r\n    randomIntFromInterval(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    stopSort() {\r\n        this.props.clearTimeouts()\r\n        this.props.setRunning(false)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {isRunning, sorted} = this.props\r\n        \r\n        return (\r\n            <Col className=\"bars-option shadow\">\r\n                <Form>\r\n                    <Row>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\">\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Sort Algorithm</Form.Label>\r\n                                <Select \r\n                                    onChange={this.setAlgorithmType}\r\n                                    options={ALGORITHM_TYPES}\r\n                                    isDisabled={isRunning}\r\n                                    placeholder=\"Select Algorithm\"\r\n                                    menuPlacement=\"auto\"\r\n                                    value={this.props.algorithm}\r\n                                    defaultValue={this.props.algorithm}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\">\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Animation Speed</Form.Label>\r\n                                <Select \r\n                                    onChange={this.setAnimationSpeed}\r\n                                    options={ANIMATION_SPEED}\r\n                                    isDisabled={isRunning}\r\n                                    menuPlacement=\"auto\"\r\n                                    placeholder=\"Select Speed\"\r\n                                    value={this.props.animationSpeed}\r\n                                    defaultValue={this.props.animationSpeed}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\" >\r\n                            <Form.Label>Size</Form.Label>\r\n                            <RangeSlider\r\n                                className={isRunning ? \"disabled\" : \"\"}\r\n                                min={MIN_ARRAY_SIZE} \r\n                                max={MAX_ARRAY_SIZE}\r\n                                value= {this.props.arrayBars}\r\n                                tooltipPlacement=\"top\"\r\n                                tooltipLabel={currentValue => currentValue}\r\n                                size=\"sm\"\r\n                                variant=\"info\"                                \r\n                                onChange={e => this.setArrayBars(e.target.value)}\r\n                                onAfterChange={e => this.setArrayBars(e.target.value)}\r\n                                disabled={isRunning}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\">\r\n                            \r\n                            <Button \r\n                                className={`${isRunning ? \"disabled\" : \"\"} `}\r\n                                variant=\"success\" \r\n                                id=\"generate_array\" \r\n                                onClick={this.setArray}\r\n                                style={{ marginRight:\"5px\" }}>\r\n                                New Array\r\n                            </Button>\r\n\r\n                            {isRunning ? <Button \r\n                                className={`${!isRunning ? \"disabled\" : \"\"} `} \r\n                                id=\"stop_sort\" \r\n                                variant=\"danger\"\r\n                                onClick={this.stopSort}\r\n                                >\r\n                                Stop\r\n                            </Button> \r\n                            :<Button \r\n                                className={`${isRunning || sorted ? \"disabled\" : \"\"}`} \r\n                                id=\"sort\" \r\n                                onClick={this.sort}\r\n                                variant=\"success\"\r\n                                >\r\n                                Run Sort\r\n                            </Button>}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Sates to Props\r\n * \r\n */\r\nconst mapStateToProps = (state) => ({\r\n    array: state.array,\r\n    arrayBars: state.arrayBars,\r\n    animationSpeed: state.animationSpeed,\r\n    algorithm: state.algorithm,\r\n    swappers: state.swappers,\r\n    isRunning: state.isRunning,\r\n    sorted: state.sorted\r\n})\r\n\r\n\r\n/**\r\n * Action to Props\r\n * Dispatch Reducers\r\n * \r\n */\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAnimationSpeed: (speed) => dispatch(setAnimationSpeed(speed)),\r\n        setAlgorithm: (algorithm) => dispatch(setAlgorithmType(algorithm)),\r\n        setArrayBars: (bars) => dispatch(setArrayBars(bars)),\r\n        setArray: (array) => dispatch(setArray(array)),\r\n        setRunning: (isRunning) => dispatch(setRunning(isRunning)),\r\n        setSorted: (isSorted) => dispatch(setSorted(isSorted)),\r\n        clearTimeouts : () => dispatch(clearTimeout()),\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Connect States, Reducer to Props\r\n * \r\n */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BarOptions)\r\n","import React, { Component } from 'react'\r\nimport {  Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Bars extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // Local State\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        const { \r\n            array, \r\n            swappers, \r\n            isSorted,\r\n            selectionSearchIndex,\r\n            selectionCurrentIndex,\r\n            selectionTagIndex \r\n        } = this.props\r\n\r\n        let barOneIndex = null\r\n        let barTwoIndex = null\r\n\r\n        if(swappers.length > 0)\r\n        {\r\n            const isSwap = Array.isArray(swappers[0])\r\n\r\n            barOneIndex = isSwap ? swappers[0][0] : swappers[0]            \r\n            barTwoIndex = isSwap ? (1 in swappers) ? swappers[1][0] : null : swappers[1]\r\n        }\r\n\r\n        return (\r\n            <Col \r\n                className=\"bars\" \r\n                md=\"12\"\r\n                lg=\"12\"\r\n                sm=\"12\"\r\n                >\r\n                { array.map((val, key) => {\r\n                    const width = window.innerWidth / this.props.arrayBars\r\n                    const classSwap = (!isSorted) ? (key === barOneIndex || key === barTwoIndex) ? \" swap\" : \"\" \r\n                    : \" sorted\"\r\n\r\n                    const searching = selectionSearchIndex === key ? \" search\" : \"\"\r\n                    const tagged    = selectionTagIndex === key ? \" tagged\" : \"\"\r\n                    const current   = selectionCurrentIndex === key ? \" current\" : \"\"\r\n                  \r\n                    return <span \r\n                        className={\"bar\" + classSwap + searching + tagged +  current}\r\n                        key={key}\r\n                        style={{\r\n                            height: `${val}%`,\r\n                            width: `${width}%`\r\n                        }}>\r\n                            {this.props.arrayBars <= 50 ? val :\"\"}\r\n                    </span>\r\n                }) }    \r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    array: state.array,\r\n    arrayBars: state.arrayBars,\r\n    swappers: state.swappers,\r\n    isSorted : state.sorted,\r\n    selectionSearchIndex : state.selectionSearchIndex,\r\n    selectionCurrentIndex : state.selectionCurrentIndex,\r\n    selectionTagIndex : state.selectionTagIndex\r\n})\r\n\r\nexport default connect(mapStateToProps)(Bars)","import React, { Component } from 'react'\r\nimport BarOptions from '../Includes/BarOptions'\r\nimport Bars from '../Includes/Bars'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nexport default class SortVisualizer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-app\">\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-center\">\r\n                        <BarOptions />\r\n                        <Bars />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './Includes/Header'\r\nimport SortVisualizer from './SortVisualizer/SortVisualizer'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header />\r\n                <SortVisualizer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import './assets/css/App.css';\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n      <>\n      <Main />\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css'\nimport { Provider } from 'react-redux';\nimport store from './Store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}