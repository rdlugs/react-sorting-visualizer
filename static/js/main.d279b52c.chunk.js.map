{"version":3,"sources":["components/Includes/Header.js","actions/index.js","reducers/Array/index.js","reducers/Algorithm/index.js","reducers/AnimationSpeed/index.js","reducers/ArrayBars/index.js","reducers/Running/index.js","reducers/Swappers/index.js","reducers/Swappers/selectionSearch.js","reducers/Swappers/selectionCurrent.js","reducers/Swappers/selectionTag.js","reducers/Sorted/index.js","reducers/Timeeouts/index.js","reducers/index.js","Store.js","components/SortingAlgorithms/_handleDispatch.js","components/SortingAlgorithms/InsertionSort.js","components/SortingAlgorithms/SelectionSort.js","components/SortingAlgorithms/BubbleSort.js","components/SortingAlgorithms/MergeSort.js","components/SortingAlgorithms/QuickSort.js","components/Includes/BarOptions.js","components/Includes/Bars.js","components/SortVisualizer/SortVisualizer.js","components/Main.js","App.js","index.js"],"names":["Header","props","state","theme","this","setState","getTheme","localStorage","setItem","getItem","Navbar","bg","variant","sticky","Container","fluid","Brand","href","Image","src","alt","width","roundedCircle","style","marginRight","Collapse","className","Text","rel","target","React","Component","setRunning","isRunning","type","payload","setSwappers","swappers","setSorted","isSorted","ArrayReducer","action","AlgorithmReucer","AnimationSpeedReducer","ArrayBarsReducer","RunningReducer","defaultState","swappersReducer","selectionSearchReducer","selectionCurrentReducer","selectionTagReducer","sortedReducer","timeoutsReducer","length","i","clearTimeout","allReducers","combineReducers","arrayBars","algorithm","AlgorithmReducer","animationSpeed","array","sorted","selectionSearchIndex","selectionCurrentIndex","selectionTagIndex","timeouts","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Timeouts","handleDispatch","toDispatch","speed","isDone","store","dispatch","Array","isArray","push","setTimeout","barOneIndex","barTwoIndex","InsertionSort","auxArray","arrLength","current_val","prev_index","current_index","doInsertionSort","slice","SelectionSort","curr_val","smallest_val","smallest_index","x","doSelectionSort","BubbleSort","array_length","swap","y","doBubbleSort","MergeSort","auxArr","doMergeSort","mainArray","startidx","endidx","mididx","Math","floor","idx1","idx2","idx3","doMerge","QuickSort","doQuickSort","low","high","partition","start","end","pivot","j","lowVal","k","quickSortHelper","BarOptions","SelectAlgorithmTypes","SelectAnimationSpeed","setArray","bind","sort","setAlgorithmType","setAnimationSpeed","stopSort","setSelectAlgorithmTypes","setSelectAnimationSpeed","setArrayBars","types","value","label","speeds","algorithmSelected","setAlgorithm","speedSelected","bars","Number","randomIntFromInterval","min","max","random","clearTimeouts","Col","md","lg","sm","Form","Row","tooltipPlacement","tooltipLabel","currentValue","size","onChange","e","onAfterChange","disabled","Group","Label","options","isDisabled","placeholder","menuPlacement","defaultValue","Button","id","onClick","connect","Bars","isSwap","map","val","key","classSwap","searching","tagged","current","height","borderRadius","transition","SortVisualizer","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d279b52c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Container, Image, Form } from 'react-bootstrap'\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            theme : false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ theme : this.getTheme() })\r\n    }\r\n\r\n    setTheme(theme){\r\n        localStorage.setItem(\"theme\", theme)\r\n        this.setState({ theme: theme })\r\n    }\r\n\r\n    getTheme(){\r\n        return (localStorage.getItem(\"theme\") === \"true\") ? true : false \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Container fluid>\r\n                <Navbar.Brand href=\"/\">\r\n                    <Image \r\n                        src=\"./logo.png\" \r\n                        alt=\"\" \r\n                        width=\"30\" \r\n                        roundedCircle\r\n                        style={{ marginRight:\"10px\" }}/>\r\n                    Sorting Visualizer\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    {/* <Form>\r\n                        <Form.Check \r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            defaultChecked={this.getTheme()}\r\n                            onChange={e => this.setTheme(e.target.checked)}\r\n                        />\r\n                    </Form>\r\n                    <span className=\"dark-light\">\r\n                        <Image src={ this.getTheme() ? \"./moon.png\" : \"./sun.png\" } />\r\n                    </span> */}\r\n                    <Navbar.Text>\r\n                        <a \r\n                            href=\"https://github.com/rdlugs\" \r\n                            rel=\"noopener noreferrer\" \r\n                            target=\"_blank\"\r\n                            className=\"githubLink\">github.com/rdlugs</a>\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n","const setAnimationSpeed = (speed) => {\r\n    return {\r\n        type : \"SET_ANIMATION_SPEED\",\r\n        payload: speed\r\n    }\r\n}\r\n\r\nconst setAlgorithmType = (algorithm) => {\r\n    return {\r\n        type: \"SET_ALGORITHM\",\r\n        payload: algorithm\r\n    }\r\n}\r\n\r\nconst setArrayBars = (bars) => {\r\n    return{\r\n        type: \"SET_ARRAY_BARS\",\r\n        payload: bars\r\n    }\r\n}\r\n\r\nconst setArray = (array) => {\r\n    return {\r\n        type: \"SET_ARRAY\",\r\n        payload: array,\r\n    }\r\n}\r\n\r\n\r\nconst setRunning = (isRunning) => {\r\n    return {\r\n        type: \"SET_RUNNING\",\r\n        payload: isRunning\r\n    }\r\n}\r\n\r\nconst setSwappers = (swappers) => {\r\n    return {\r\n        type: \"SET_SWAPPERS\",\r\n        payload: swappers\r\n    }\r\n}\r\n\r\nconst clearSwappers = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSorted = (isSorted) => {\r\n    return {\r\n        type: \"SET_SORTED\",\r\n        payload: isSorted\r\n    }\r\n}\r\n\r\nconst setSelectionSearchIndex = (searchIndex) => {\r\n    return {\r\n        type: \"SET_SEARCH\",\r\n        payload: searchIndex\r\n    }\r\n}\r\nconst clearSelectionSearchIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSelectionCurrentIndex = (currentIndex) => {\r\n    return {\r\n        type: \"SET_CURRENT\",\r\n        payload: currentIndex\r\n    }\r\n}\r\nconst clearSelectionCurrentIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst setSelectionTagIndex = (tagIndex) => {\r\n    return {\r\n        type: \"SET_TAG\",\r\n        payload: tagIndex\r\n    }\r\n}\r\nconst clearSelectionTagIndex = () => {\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nconst addTimeout = (timeout) => {\r\n    return {\r\n        type: \"ADD_TIMEOUT\",\r\n        payload: timeout\r\n    }\r\n}\r\nconst clearTimeout = () =>{\r\n    return { type: \"CLEAR\" }\r\n}\r\n\r\nexport { \r\n    setAnimationSpeed, \r\n    setAlgorithmType,\r\n    setArrayBars,\r\n    setArray,\r\n    setRunning,\r\n    setSwappers,\r\n    clearSwappers,\r\n    setSorted,\r\n    setSelectionSearchIndex,\r\n    setSelectionCurrentIndex,\r\n    setSelectionTagIndex,\r\n    clearSelectionSearchIndex,\r\n    clearSelectionCurrentIndex,\r\n    clearSelectionTagIndex,\r\n    addTimeout,\r\n    clearTimeout\r\n}","\r\nconst ArrayReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"SET_ARRAY\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ArrayReducer","const defaultState = \"\"\r\n\r\nconst AlgorithmReucer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ALGORITHM\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AlgorithmReucer","const defaultState = 0\r\n\r\nconst AnimationSpeedReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ANIMATION_SPEED\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AnimationSpeedReducer","const defaultState = 50\r\n\r\nconst ArrayBarsReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ARRAY_BARS\":\r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ArrayBarsReducer","const defaultState = false\r\n\r\nconst RunningReducer = (state = defaultState, action) => {\r\n    if(action.type === \"SET_RUNNING\")\r\n        state = action.payload\r\n    \r\n    return state\r\n}\r\n\r\nexport default RunningReducer","const defaultState = []\r\n\r\nconst swappersReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_SWAPPERS\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = []\r\n            break\r\n        default:\r\n            state = []\r\n    }\r\n    return state\r\n}\r\n\r\nexport default swappersReducer","const defaultState = null\r\n\r\nconst selectionSearchReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_SEARCH\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionSearchReducer","const defaultState = null\r\n\r\nconst selectionCurrentReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_CURRENT\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionCurrentReducer","const defaultState = null\r\n\r\nconst selectionTagReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"SET_TAG\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            state = null\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default selectionTagReducer","const defaultState = false\r\n\r\nconst sortedReducer = (state = defaultState, action) => {\r\n    if(action.type === \"SET_SORTED\") {\r\n        state = action.payload\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default sortedReducer","const defaultState = []\r\n\r\nconst timeoutsReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"ADD_TIMEOUT\":\r\n            state = action.payload\r\n            break\r\n        case \"CLEAR\":\r\n            if(state.length > 0) {\r\n                for(let i=0; i < state.length; i++)\r\n                {\r\n                    clearTimeout(state[i])\r\n                }\r\n            }\r\n            state = []\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\nexport default timeoutsReducer","import { combineReducers } from 'redux'\r\n\r\n/**\r\n * Reducers\r\n * \r\n */\r\nimport ArrayReducer from './Array'\r\nimport AlgorithmReducer from './Algorithm'\r\nimport AnimationSpeedReducer from  './AnimationSpeed'\r\nimport ArrayBarsReducer from './ArrayBars'\r\nimport RunningReducer from './Running'\r\nimport swappersReducer from './Swappers'\r\nimport selectionSearchReducer from './Swappers/selectionSearch'\r\nimport selectionCurrentReducer from './Swappers/selectionCurrent'\r\nimport selectionTagReducer from './Swappers/selectionTag'\r\nimport sortedReducer from './Sorted'\r\nimport timeoutsReducer from './Timeeouts'\r\n\r\nconst allReducers = combineReducers({\r\n    arrayBars       : ArrayBarsReducer,\r\n    algorithm       : AlgorithmReducer,\r\n    animationSpeed  : AnimationSpeedReducer,\r\n    array           : ArrayReducer,\r\n    isRunning       : RunningReducer,\r\n    swappers        : swappersReducer,\r\n    sorted          : sortedReducer,\r\n    selectionSearchIndex     : selectionSearchReducer,\r\n    selectionCurrentIndex    : selectionCurrentReducer,\r\n    selectionTagIndex        : selectionTagReducer,\r\n    timeouts                 : timeoutsReducer\r\n})\r\n\r\nexport default allReducers","import { createStore } from \"redux\"\r\nimport allReducers from \"./reducers\"\r\n\r\nexport default createStore(\r\n    allReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)","import store from '../../Store'\r\n\r\n/**\r\n * Action States\r\n * \r\n */\r\nimport { \r\n    setSwappers, \r\n    setRunning, \r\n    setSorted, \r\n    addTimeout, \r\n    clearTimeout,\r\n    setSelectionSearchIndex,\r\n    setSelectionCurrentIndex,\r\n    setSelectionTagIndex,\r\n    clearSelectionCurrentIndex,\r\n    clearSelectionSearchIndex,\r\n    clearSelectionTagIndex,\r\n} from '../../actions'\r\n\r\n/**\r\n * \r\n * Timouts Temp\r\n * \r\n */\r\n let Timeouts = []\r\n\r\nfunction handleDispatch(toDispatch, array, animationSpeed, algorithm) {\r\n    const speed = 100 / animationSpeed\r\n    let isDone = 0\r\n\r\n    store.dispatch(setRunning(true))\r\n    store.dispatch(setSorted(false))\r\n\r\n    for(let i=0; i < toDispatch.length; i++) {\r\n        isDone = i * speed\r\n\r\n        // Swapping Values\r\n        if(Array.isArray(toDispatch[i][0])) \r\n        {\r\n            Timeouts.push(setTimeout(()=>{\r\n                if(algorithm === \"mergeSort\")\r\n                {\r\n                    const barOneIndex = toDispatch[i][0][0]\r\n                    store.dispatch(setSwappers(toDispatch[i]))\r\n                    array[barOneIndex] = toDispatch[i][0][1]\r\n                }\r\n                else\r\n                {\r\n                    const barOneIndex = toDispatch[i][0][0]\r\n                    const barTwoIndex = toDispatch[i][1][0]\r\n                    \r\n                    store.dispatch(setSwappers(toDispatch[i]))\r\n                    \r\n                    array[barOneIndex] = toDispatch[i][0][1]\r\n                    array[barTwoIndex] = toDispatch[i][1][1]\r\n                }\r\n\r\n            }, i * speed))\r\n        }\r\n        else\r\n        {\r\n            switch(algorithm)\r\n            {\r\n                case \"insertionSort\":\r\n                case \"bubbleSort\":\r\n                case \"mergeSort\":\r\n                case \"quickSort\":\r\n                    Timeouts.push(setTimeout(()=>{\r\n                        store.dispatch(setSwappers(toDispatch[i]))\r\n                    }, i * speed))\r\n                    break\r\n\r\n                case \"selectionSort\":\r\n                    Timeouts.push(setTimeout(()=>{\r\n                        switch(toDispatch[i][0]){\r\n                            case \"current\":\r\n                                store.dispatch(setSelectionCurrentIndex(toDispatch[i][1]))\r\n                                break;\r\n                            case \"search\":\r\n                                store.dispatch(setSelectionSearchIndex(toDispatch[i][1]))\r\n                                break;\r\n                            case \"tag\":\r\n                                store.dispatch(setSelectionTagIndex(toDispatch[i][1]))\r\n                                break;\r\n                            default:\r\n                                return true\r\n                        }\r\n                    }, i * speed))\r\n                    break\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    // Is Animation is done\r\n    Timeouts.push(setTimeout(()=>{\r\n        store.dispatch(setRunning(false))\r\n        store.dispatch(setSorted(true))\r\n        store.dispatch(clearTimeout())\r\n        \r\n        if( algorithm === \"selectionSort\" ) \r\n        {\r\n            store.dispatch(clearSelectionCurrentIndex())\r\n            store.dispatch(clearSelectionSearchIndex())\r\n            store.dispatch(clearSelectionTagIndex())\r\n        }\r\n\r\n    }, isDone))\r\n\r\n    // add Timeouts to store\r\n    store.dispatch(addTimeout(Timeouts))\r\n}\r\n\r\nexport default handleDispatch","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function InsertionSort(array, animationSpeed, algorithm) {\r\n    \r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n\r\n    doInsertionSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doInsertionSort(auxArray, toDispatch) {\r\n    let arrLength = auxArray.length\r\n    \r\n    for(let i=1; i < arrLength; i++) \r\n    {\r\n        var current_val = auxArray[i]\r\n        var prev_index = i - 1\r\n        var current_index = i\r\n        \r\n        toDispatch.push([prev_index, current_index])\r\n        while( auxArray[prev_index] > current_val) {\r\n            auxArray[prev_index + 1] = auxArray[prev_index];\r\n            \r\n            toDispatch.push([ [prev_index, current_val], [current_index, auxArray[prev_index]] ])\r\n            \r\n            prev_index--      \r\n            current_index--\r\n        }\r\n\r\n        auxArray[prev_index+1] = current_val\r\n    }\r\n}","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function SelectionSort(array, animationSpeed, algorithm) {\r\n\r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n    doSelectionSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doSelectionSort(auxArray, toDispatch)\r\n{\r\n    let arrLength = auxArray.length\r\n\r\n    for(let i=0; i < arrLength; i++) \r\n    {\r\n        var curr_val = auxArray[i]\r\n        var smallest_val = auxArray[i]\r\n        var smallest_index = null\r\n\r\n        toDispatch.push([\"current\", i])\r\n\r\n        for(let x=i+1; x < arrLength; x++)\r\n        {\r\n            toDispatch.push([\"search\", x])\r\n            if(auxArray[x] <= curr_val) \r\n            {\r\n                if(auxArray[x] < smallest_val) {\r\n                    toDispatch.push([\"tag\", x])\r\n                    smallest_val = auxArray[x]\r\n                    smallest_index = x\r\n                }\r\n            }\r\n        }\r\n\r\n        if(smallest_index)\r\n        {\r\n            toDispatch.push([ [i,auxArray[smallest_index]], [smallest_index, curr_val ] ])\r\n            auxArray[i] = auxArray[smallest_index]\r\n            auxArray[smallest_index] = curr_val \r\n        }\r\n    }\r\n}\r\n","\r\nimport handleDispatch from \"./_handleDispatch\"\r\n\r\nexport default function BubbleSort(array, animationSpeed, algorithm) {\r\n    \r\n    const toDispatch = []\r\n    const auxArray = array.slice()\r\n    \r\n    doBubbleSort(auxArray, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doBubbleSort(auxArray, toDispatch)\r\n{\r\n    let array_length = auxArray.length\r\n    for(let x=0; x < array_length; x++)\r\n    {\r\n        let swap = false\r\n        for(let y=0; y < array_length - x - 1; y++)\r\n        {\r\n            if(y+1 <= array_length - 1)\r\n            {\r\n                const current_val = auxArray[y]\r\n                toDispatch.push([y, y+1])\r\n\r\n                if(current_val > auxArray[y+1])\r\n                {\r\n                    toDispatch.push([ [y, auxArray[y+1]], [y+1, current_val] ])\r\n                    auxArray[y] = auxArray[y+1]\r\n                    auxArray[y+1] = current_val\r\n                    swap = true\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!swap)\r\n            break\r\n    }\r\n}\r\n","import handleDispatch from \"./_handleDispatch\"\r\n\r\nexport default function MergeSort(array, animationSpeed, algorithm) {\r\n    const toDispatch = [];\r\n    \r\n    if (array.length <= 1) return array;\r\n\r\n    const auxArr = array.slice()\r\n    \r\n    doMergeSort(array.slice(), auxArr, 0, array.length - 1, toDispatch);\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doMergeSort(mainArray, auxArr, startidx, endidx, toDispatch) {\r\n    \r\n    if(startidx === endidx) return\r\n    let mididx = Math.floor((startidx + endidx) / 2)\r\n\r\n    doMergeSort(auxArr, mainArray, startidx, mididx, toDispatch)\r\n    doMergeSort(auxArr, mainArray, mididx + 1, endidx, toDispatch)\r\n\r\n    doMerge(mainArray, auxArr, startidx, mididx, endidx, toDispatch)\r\n}\r\n\r\nfunction doMerge(mainArray, auxArr, startidx, mididx, endidx, toDispatch){\r\n    let idx1 = startidx\r\n    let idx2 = startidx\r\n    let idx3 = mididx + 1\r\n\r\n    while(idx2 <= mididx && idx3 <= endidx)\r\n    {\r\n        toDispatch.push([idx2, idx3]);\r\n        if(auxArr[idx2] <= auxArr[idx3])\r\n        {\r\n            toDispatch.push([[idx1, auxArr[idx2]]]);\r\n            mainArray[idx1++] = auxArr[idx2++]\r\n        }\r\n        else\r\n        {\r\n            toDispatch.push([[idx1, auxArr[idx3]]]);\r\n            mainArray[idx1++] = auxArr[idx3++]\r\n        }\r\n    }\r\n\r\n    while (idx2 <= mididx) {\r\n        toDispatch.push([idx2, idx2]);\r\n        toDispatch.push([[idx1, auxArr[idx2]]]);\r\n        mainArray[idx1++] = auxArr[idx2++];\r\n    }\r\n    \r\n    while (idx3 <= endidx) {\r\n        toDispatch.push([idx3, idx3]);\r\n        toDispatch.push([[idx1, auxArr[idx3]]]);\r\n        mainArray[idx1++] = auxArr[idx3++];\r\n    }\r\n}","import handleDispatch from './_handleDispatch'\r\n\r\nexport default function QuickSort(array, animationSpeed, algorithm) {\r\n    const auxArr = array.slice()\r\n    const toDispatch = []\r\n    \r\n    doQuickSort(auxArr, 0, array.length - 1, toDispatch)\r\n    handleDispatch(toDispatch, array, animationSpeed, algorithm)\r\n    return toDispatch\r\n}\r\n\r\nfunction doQuickSort(array, low, high, toDispatch){\r\n   if(low < high){\r\n        const partition = quickSortHelper(array, low, high, toDispatch)\r\n        doQuickSort(array, low, partition - 1, toDispatch)\r\n        doQuickSort(array, partition + 1, high, toDispatch)\r\n   }    \r\n}\r\n\r\nfunction quickSortHelper(array, start, end, toDispatch){\r\n    let pivot = array[end]\r\n    let i = start - 1\r\n\r\n    for(let j = start; j <= end -1; j++){\r\n        if(array[j] < pivot){\r\n            i++\r\n            let lowVal = array[i]\r\n            toDispatch.push([ [i, array[j]], [j, lowVal] ])\r\n            array[i] = array[j]\r\n            array[j] = lowVal\r\n        }\r\n    }\r\n\r\n    let k = array[i + 1]\r\n    toDispatch.push([ [i+1, array[end] ], [end, k] ])\r\n    array[i+1] = array[end]\r\n    array[end] = k\r\n    \r\n    return i+1\r\n}","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport {  Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport RangeSlider from 'react-bootstrap-range-slider'\r\n\r\n/**\r\n * Redux Actions\r\n * \r\n */\r\nimport { \r\n    setAnimationSpeed, \r\n    setAlgorithmType, \r\n    setArrayBars, \r\n    setArray, \r\n    setRunning, \r\n    setSorted,\r\n    clearTimeout\r\n} from '../../actions'\r\n\r\n\r\n/**\r\n * Import Algorithms\r\n * \r\n */\r\nimport InsertionSort from '../SortingAlgorithms/InsertionSort'\r\nimport SelectionSort from '../SortingAlgorithms/SelectionSort'\r\nimport BubbleSort from '../SortingAlgorithms/BubbleSort'\r\nimport MergeSort from '../SortingAlgorithms/MergeSort'\r\nimport QuickSort from '../SortingAlgorithms/QuickSort'\r\n\r\n\r\n/**\r\n * Default array bars\r\n * Change this value to set default array bars\r\n * \r\n */\r\nconst DEFAULT_ARRAY_BARS = 50\r\n\r\nclass BarOptions extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // Local States\r\n        this.state = {\r\n            SelectAlgorithmTypes: [],\r\n            SelectAnimationSpeed : []\r\n        }\r\n\r\n        this.setArray           = this.setArray.bind(this)\r\n        this.sort               = this.sort.bind(this)\r\n        this.setAlgorithmType   = this.setAlgorithmType.bind(this)\r\n        this.setAnimationSpeed  = this.setAnimationSpeed.bind(this)\r\n        this.stopSort           = this.stopSort.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setSelectAlgorithmTypes()\r\n        this.setSelectAnimationSpeed()\r\n        this.setAlgorithmType()\r\n        this.setAnimationSpeed()\r\n        this.setArrayBars()\r\n    }\r\n\r\n    setSelectAlgorithmTypes() {\r\n        const types = []\r\n        types.push(\r\n            { value:\"quickSort\", label:\"Quick Sort\" },\r\n            { value:\"mergeSort\", label:\"Merge Sort\" },\r\n            { value:\"insertionSort\", label:\"Insertion Sort\" },\r\n            { value:\"selectionSort\", label:\"Selection Sort\" },\r\n            { value:\"bubbleSort\", label:\"Bubble Sort\" },\r\n        )\r\n        this.setState({ SelectAlgorithmTypes: types })\r\n    }\r\n\r\n    setSelectAnimationSpeed() {\r\n        const speeds = []\r\n        speeds.push(\r\n            // { value:0.5, label:\"0.5x\" },\r\n            // { value:0.75, label: \"0.75x\" },\r\n            { value:1, label: \"1x\" },\r\n            { value:2, label: \"2x\" },\r\n            { value:4, label: \"4x\" },\r\n            // { value:8, label:\"8x\" }\r\n        )\r\n        this.setState({ SelectAnimationSpeed: speeds })\r\n    }\r\n\r\n    setAlgorithmType(algorithm = \"quickSort\") {\r\n        const algorithmSelected = algorithm.value ? algorithm : {value:algorithm, label:\"Quick Sort\"}\r\n        this.props.setAlgorithm(algorithmSelected)\r\n    }\r\n\r\n    setAnimationSpeed(speed = 4) {\r\n        const speedSelected = speed.value ? speed : {value:speed, label:\"4x\"}\r\n        this.props.setAnimationSpeed(speedSelected)\r\n    }\r\n\r\n    setArrayBars(bars = DEFAULT_ARRAY_BARS) {\r\n        this.props.setArrayBars(Number(bars))\r\n        this.setArray(Number(bars))\r\n    }\r\n\r\n    setArray(bars = null) {\r\n        const array = []\r\n        const arrayBars = Number(bars) ? Number(bars) : Number(this.props.arrayBars)\r\n        \r\n        for (let i = 0; i < arrayBars; i++) \r\n            array.push(this.randomIntFromInterval(5, 100));\r\n    \r\n        this.props.setArray(array)\r\n        this.props.setSorted(false)\r\n        this.props.setRunning(false)\r\n    }\r\n\r\n    sort() {\r\n        const { array, animationSpeed, algorithm } = this.props\r\n\r\n        const doSort = algorithm.value === 'insertionSort' ? InsertionSort :\r\n                algorithm.value === 'selectionSort' ? SelectionSort :\r\n                algorithm.value === 'bubbleSort' ? BubbleSort :\r\n                algorithm.value === 'mergeSort' ? MergeSort : \r\n                algorithm.value === 'quickSort' ? QuickSort : null\r\n\r\n        doSort(array, animationSpeed.value, algorithm.value)\r\n    }\r\n\r\n    randomIntFromInterval(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    stopSort() {\r\n        this.props.clearTimeouts()\r\n        this.props.setRunning(false)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {SelectAlgorithmTypes, SelectAnimationSpeed} = this.state\r\n        const {isRunning} = this.props\r\n        \r\n        return (\r\n            <Col className=\"bars-option shadow\" md=\"8\" lg= \"8\" sm=\"12\">\r\n                <Form>\r\n                    <Row>\r\n                        <Col md=\"12\" lg=\"12\" sm=\"12\" className=\"mb-5\">\r\n                            \r\n                            <RangeSlider\r\n                                className={isRunning ? \"disabled\" : \"\"}\r\n                                min={10} \r\n                                max={100}\r\n                                value= {this.props.arrayBars}\r\n                                tooltipPlacement=\"top\"\r\n                                tooltipLabel={currentValue => `Bars | ${currentValue}%`}\r\n                                size=\"sm\"\r\n                                variant=\"info\"                                \r\n                                onChange={e => this.setArrayBars(e.target.value)}\r\n                                onAfterChange={e => this.setArrayBars(e.target.value)}\r\n                                disabled={isRunning}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\">\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Sort Algorithm</Form.Label>\r\n                                <Select \r\n                                    onChange={this.setAlgorithmType}\r\n                                    options={SelectAlgorithmTypes}\r\n                                    isDisabled={isRunning}\r\n                                    placeholder=\"Select Algorithm\"\r\n                                    menuPlacement=\"auto\"\r\n                                    value={this.props.algorithm}\r\n                                    defaultValue={this.props.algorithm}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\" lg=\"3\" sm=\"12\">\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Animation Speed</Form.Label>\r\n                                <Select \r\n                                    onChange={this.setAnimationSpeed}\r\n                                    options={SelectAnimationSpeed}\r\n                                    isDisabled={isRunning}\r\n                                    menuPlacement=\"auto\"\r\n                                    placeholder=\"Select Speed\"\r\n                                    value={this.props.animationSpeed}\r\n                                    defaultValue={this.props.animationSpeed}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\" lg=\"6\" sm=\"12\">\r\n                            \r\n                            <Button \r\n                                className={`${isRunning ? \"disabled\" : \"\"} float-end`}\r\n                                variant=\"success\" \r\n                                id=\"generate_array\" \r\n                                onClick={this.setArray}\r\n                                style={{ marginRight:\"5px\" }}>\r\n                                Generate Array\r\n                            </Button>\r\n\r\n                            {isRunning ? <Button \r\n                                className={`${!isRunning ? \"disabled\" : \"\"} float-end`} \r\n                                id=\"stop_sort\" \r\n                                variant=\"danger\"\r\n                                onClick={this.stopSort}\r\n                                >\r\n                                Stop\r\n                            </Button> \r\n                            :<Button \r\n                                className={`${isRunning ? \"disabled\" : \"\"} float-end`} \r\n                                id=\"sort\" \r\n                                onClick={this.sort}\r\n                                variant=\"success\"\r\n                                >\r\n                                Run Sort\r\n                            </Button>}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Sates to Props\r\n * \r\n */\r\nconst mapStateToProps = (state) => ({\r\n    array: state.array,\r\n    arrayBars: state.arrayBars,\r\n    animationSpeed: state.animationSpeed,\r\n    algorithm: state.algorithm,\r\n    swappers: state.swappers,\r\n    isRunning: state.isRunning\r\n})\r\n\r\n\r\n/**\r\n * Action to Props\r\n * Dispatch Reducers\r\n * \r\n */\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAnimationSpeed: (speed) => dispatch(setAnimationSpeed(speed)),\r\n        setAlgorithm: (algorithm) => dispatch(setAlgorithmType(algorithm)),\r\n        setArrayBars: (bars) => dispatch(setArrayBars(bars)),\r\n        setArray: (array) => dispatch(setArray(array)),\r\n        setRunning: (isRunning) => dispatch(setRunning(isRunning)),\r\n        setSorted: (isSorted) => dispatch(setSorted(isSorted)),\r\n        clearTimeouts : () => dispatch(clearTimeout()),\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Connect States, Reducer to Props\r\n * \r\n */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BarOptions)\r\n","import React, { Component } from 'react'\r\nimport {  Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Bars extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // Local State\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        const { \r\n            array, \r\n            swappers, \r\n            isSorted,\r\n            selectionSearchIndex,\r\n            selectionCurrentIndex,\r\n            selectionTagIndex \r\n        } = this.props\r\n\r\n        let barOneIndex = null\r\n        let barTwoIndex = null\r\n\r\n        if(swappers.length > 0)\r\n        {\r\n            const isSwap = Array.isArray(swappers[0])\r\n\r\n            barOneIndex = isSwap ? swappers[0][0] : swappers[0]            \r\n            barTwoIndex = isSwap ? (1 in swappers) ? swappers[1][0] : null : swappers[1]\r\n        }\r\n\r\n        return (\r\n            <Col \r\n                className=\"bars\" \r\n                md=\"12\"\r\n                lg=\"12\"\r\n                sm=\"12\"\r\n                >\r\n                { array.map((val, key) => {\r\n\r\n                    const classSwap = (!isSorted) ? (key === barOneIndex || key === barTwoIndex) ? \"swap\" : \"\" \r\n                    : \"sorted\"\r\n\r\n                    // for selection algorithm\r\n                    const searching = selectionSearchIndex === key ? \"search\" : \"\"\r\n                    const tagged = selectionTagIndex === key ? \"tagged\" : \"\"\r\n                    const current = selectionCurrentIndex === key ? \"current\" : \"\"\r\n                  \r\n                    return <span \r\n                        className={\"bar \" + classSwap + \" \" + searching + \" \" + tagged + \" \" + current}\r\n                        key={key}\r\n                        style={{\r\n                            height: `${val}%`,\r\n                            borderRadius: '5px',\r\n                            transition: '1',\r\n                            width: `${50/this.props.arrayBars}%`\r\n                        }}>\r\n                    </span>\r\n                }) }    \r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    array: state.array,\r\n    arrayBars: state.arrayBars,\r\n    swappers: state.swappers,\r\n    isSorted : state.sorted,\r\n    selectionSearchIndex : state.selectionSearchIndex,\r\n    selectionCurrentIndex : state.selectionCurrentIndex,\r\n    selectionTagIndex : state.selectionTagIndex\r\n})\r\n\r\nexport default connect(mapStateToProps)(Bars)","import React, { Component } from 'react'\r\nimport BarOptions from '../Includes/BarOptions'\r\nimport Bars from '../Includes/Bars'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nexport default class SortVisualizer extends Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-app\">\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Bars />\r\n                        <BarOptions />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './Includes/Header'\r\nimport SortVisualizer from './SortVisualizer/SortVisualizer'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header />\r\n                <SortVisualizer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import './assets/css/App.css';\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n      <>\n      <Main />\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css'\nimport { Provider } from 'react-redux';\nimport store from './Store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}